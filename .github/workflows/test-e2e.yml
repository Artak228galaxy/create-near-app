name: Tests E2E
on:
  workflow_dispatch:

  push:
    # TODO: uncomment this when ready
    # branches:
    #   - "master"
jobs:
  # tests-bash:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       platform: [ubuntu-latest, macos-latest]
  #       nodejs: [16]
  #       contract: [js, rust, assemblyscript]
  #       frontend: [react, vanilla, none]
  #       tests: [js, rust]
  #   #        exclude:
  #   #          - frontend: vanilla
  #   #          - frontend: none
  #   #        include:
  #   #          - contract: js
  #   #            frontend: vanilla
  #   #            tests: js
  #   #          - contract: js
  #   #            frontend: none
  #   #            tests: js
  #   runs-on: ${{ matrix.platform }}
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.nodejs }}
  #     - name: Install modules
  #       run: |
  #         npm install
  #         npm run build
  #     - name: Scaffold template
  #       run: |
  #         node index.js _testrun --contract ${{ matrix.contract }} --frontend ${{ matrix.frontend }} --tests ${{ matrix.tests }} --install
  #     - name: Build template
  #       env:
  #         NEAR_ENV: ci
  #         IS_GITHUB_ACTION: true
  #       run: |
  #         cd _testrun
  #         npm run build
  #     - name: Test template
  #       if: matrix.platform != 'macos-latest'
  #       env:
  #         NEAR_ENV: ci
  #         IS_GITHUB_ACTION: true
  #       run: |
  #         cd _testrun
  #         npm run test

  tests-wsl:
    defaults:
      run:
        shell: wsl-bash {0}
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        nodejs: [16]
        contract: [js, rust]
        frontend: [react, vanilla, none]
        tests: [js, rust]
        exclude:
          - contract: js
          - tests: js
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 60
    steps:
      - name: Setup WSL
        uses: Vampire/setup-wsl@v1.3.1
        with:
          distribution: Ubuntu-22.04
      - uses: actions/checkout@v2
      - name: Install Node
        run: |
          sudo apt-get install curl
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt-get install -y nodejs
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
      - name: Add Rust to PATH
        run: |
          echo 'export PATH="$PATH:/c/Program Files/Rust/bin"' >> ~/.bashrc
          source ~/.bashrc
      # TODO: might need cmake install too
      # - name: Install Rust
      #   run: |
      #     sudo apt install curl -y
      #     echo "fetching latest stable release of rust"
      #     curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path --default-toolchain stable
      #     echo "running cargo env"
      #     source $HOME/.cargo/env
      #     echo "running source bashrc"
      #     source $HOME/.bashrc
      #     echo "running source profile"
      #     source $HOME/.profile
      #     echo "running target add wasm-pack"
      #     rustup target add wasm32-unknown-unknown
      - name: Update rustup
        run: |
          rustup update
      - name: Install modules
        run: |
          npm install
          npm run build
      - name: Scaffold template
        run: |
          node index.js _testrun --contract ${{ matrix.contract }} --frontend ${{ matrix.frontend }} --tests ${{ matrix.tests }} --install
      - name: Build template
        env:
          NEAR_ENV: ci
          IS_GITHUB_ACTION: true
        run: |
          cd _testrun
          npm run build
      - name: Test template
        env:
          NEAR_ENV: ci
          IS_GITHUB_ACTION: true
        run: |
          cd _testrun
          npm run test
